{
  "config": {
    "configFile": "/Users/naf/Downloads/doof/playwright.config.js",
    "rootDir": "/Users/naf/Downloads/doof/e2e",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "e2e-results/html-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "e2e-results/test-results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "e2e-results/junit-report.xml"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/naf/Downloads/doof/e2e-results/test-artifacts",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "desktop-chrome-comprehensive",
        "name": "desktop-chrome-comprehensive",
        "testDir": "/Users/naf/Downloads/doof/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 300000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.52.0",
    "workers": 1,
    "webServer": null
  },
  "suites": [
    {
      "title": "debug-list-items-frontend.spec.js",
      "file": "debug-list-items-frontend.spec.js",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Debug List Items Frontend",
          "file": "debug-list-items-frontend.spec.js",
          "line": 300,
          "column": 6,
          "specs": [
            {
              "title": "Debug Frontend List Items Display Issue",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 300000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "desktop-chrome-comprehensive",
                  "projectName": "desktop-chrome-comprehensive",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 19340,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n🔵 [2025-06-03T23:44:33.007Z] 🚀 STARTING FRONTEND DEBUG TEST\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:33.836Z] ✅ Test setup completed\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:34.061Z] 🔍 STARTING FRONTEND DEBUGGING\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:34.061Z] 🔐 Authenticating...\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:39.711Z] 🎉 Authentication successful!\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.712Z] 🔍 Setting up frontend API call debugging for list 59...\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.713Z] 📡 Checking API data directly...\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.741Z] 📊 API directly returns 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.741Z] 🧭 Navigating to list 59 detail page...\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.800Z] 📤 REQUEST: GET http://localhost:5173/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.805Z] 📥 RESPONSE: 200 http://localhost:5173/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.949Z] 📤 REQUEST: GET https://maps.googleapis.com/maps/api/js?key=AIzaSyD_xhCWUXjhSXD4xpL-BxM5t7HfzJDf-dI&libraries=places\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.950Z] 📥 RESPONSE: 200 https://maps.googleapis.com/maps/api/js?key=AIzaSyD_xhCWUXjhSXD4xpL-BxM5t7HfzJDf-dI&libraries=places\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.951Z] 📤 REQUEST: GET https://maps.googleapis.com/maps/api/mapsjs/gen_204?csp_test=true\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.984Z] 📥 RESPONSE: 200 https://maps.googleapis.com/maps/api/mapsjs/gen_204?csp_test=true\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.990Z] CONSOLE LOG: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.990Z] CONSOLE [LOG]: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE LOG: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE [LOG]: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE LOG: 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE [LOG]: 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE LOG: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE [LOG]: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE LOG: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.991Z] CONSOLE [LOG]: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE LOG: 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.992Z] CONSOLE [LOG]: 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE LOG: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE [LOG]: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE LOG: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE [LOG]: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE LOG: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE [LOG]: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE LOG: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE [LOG]: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE LOG: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE [LOG]: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE LOG: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.993Z] CONSOLE [LOG]: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.994Z] 📤 REQUEST: GET http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.994Z] CONSOLE INFO: [INFO][2025-06-03T23:44:39.992Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.994Z] CONSOLE [INFO]: [INFO][2025-06-03T23:44:39.992Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.994Z] CONSOLE LOG: 🌐 [ListDetail] Fetching list details for ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.994Z] CONSOLE [LOG]: 🌐 [ListDetail] Fetching list details for ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.995Z] CONSOLE LOG: 🔑 [ListDetail] Auth check: {isAuthenticated: true, hasUser: true, userId: 104, userRole: superuser}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.995Z] CONSOLE [LOG]: 🔑 [ListDetail] Auth check: {isAuthenticated: true, hasUser: true, userId: 104, userRole: superuser}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.996Z] CONSOLE LOG: 🌐 [ListDetail] ===== LIST ITEMS QUERY STARTING =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.996Z] CONSOLE [LOG]: 🌐 [ListDetail] ===== LIST ITEMS QUERY STARTING =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.997Z] CONSOLE LOG: 🌐 [ListDetail] Fetching items for list ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.997Z] CONSOLE [LOG]: 🌐 [ListDetail] Fetching items for list ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.998Z] CONSOLE LOG: 🔍 [ListDetail] listService object: {getLists: , getList: , getListDetails: , createList: , updateList: }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.998Z] CONSOLE [LOG]: 🔍 [ListDetail] listService object: {getLists: , getList: , getListDetails: , createList: , updateList: }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.998Z] CONSOLE LOG: 🔍 [ListDetail] getListItems function: async function(listId, params = {}) {\n    const safeId = validateId(listId, 'listId');\n    \n    console.log(`[listService.getListItems] Calling API for list ${safeId} with params:`, params);\n    \n    // DEBUG: Check authentication state\n    const token = localStorage.getItem('token') || localStorage.getItem('auth-token') || localStorage.getItem('authToken');\n    console.log(`[listService.getListItems] Auth debug:`, {\n      hasToken: !!token,\n      tokenLength: token?.length,\n      tokenPreview: token ? `${token.substring(0, 20)}...` : 'none'\n    });\n    \n    try {\n      const result = await handleApiResponse(\n        () => apiClient.get(`/lists/${safeId}/items`, { params }),\n        'ListService.getListItems'\n      );\n      \n      console.log(`[listService.getListItems] Raw result from handleApiResponse:`, result);\n      console.log(`[listService.getListItems] result.data type:`, typeof result.data);\n      console.log(`[listService.getListItems] result.data is array:`, Array.isArray(result.data));\n      \n      // Format the response to maintain backward compatibility\n      const formattedResponse = {\n        success: result.success,\n        data: result.data,\n        pagination: result.pagination || null,\n        message: result.message,\n        error: result.error\n      };\n      \n      console.log(`[listService.getListItems] Formatted response:`, formattedResponse);\n      \n      return formattedResponse;\n      \n    } catch (error) {\n      console.error(`[listService.getListItems] Error caught:`, error);\n      console.error(`[listService.getListItems] Error details:`, {\n        message: error.message,\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data\n      });\n      \n      // If it's an authentication error, try making the request without auth headers\n      if (error.response?.status === 401 || error.response?.status === 403) {\n        console.log(`[listService.getListItems] Auth error, trying without auth headers...`);\n        \n        try {\n          // Create a direct axios call without authentication\n          const fallbackResult = await fetch(`/api/lists/${safeId}/items`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          if (fallbackResult.ok) {\n            const data = await fallbackResult.json();\n            console.log(`[listService.getListItems] Fallback success:`, data);\n            \n            return {\n              success: true,\n              data: data.data || data,\n              pagination: data.pagination || null,\n              message: 'Retrieved via fallback method',\n              error: null\n            };\n          } else {\n            console.error(`[listService.getListItems] Fallback also failed:`, fallbackResult.status);\n          }\n        } catch (fallbackError) {\n          console.error(`[listService.getListItems] Fallback request failed:`, fallbackError);\n        }\n      }\n      \n      // Re-throw the original error\n      throw error;\n    }\n  }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:39.998Z] CONSOLE [LOG]: 🔍 [ListDetail] getListItems function: async function(listId, params = {}) {\n    const safeId = validateId(listId, 'listId');\n    \n    console.log(`[listService.getListItems] Calling API for list ${safeId} with params:`, params);\n    \n    // DEBUG: Check authentication state\n    const token = localStorage.getItem('token') || localStorage.getItem('auth-token') || localStorage.getItem('authToken');\n    console.log(`[listService.getListItems] Auth debug:`, {\n      hasToken: !!token,\n      tokenLength: token?.length,\n      tokenPreview: token ? `${token.substring(0, 20)}...` : 'none'\n    });\n    \n    try {\n      const result = await handleApiResponse(\n        () => apiClient.get(`/lists/${safeId}/items`, { params }),\n        'ListService.getListItems'\n      );\n      \n      console.log(`[listService.getListItems] Raw result from handleApiResponse:`, result);\n      console.log(`[listService.getListItems] result.data type:`, typeof result.data);\n      console.log(`[listService.getListItems] result.data is array:`, Array.isArray(result.data));\n      \n      // Format the response to maintain backward compatibility\n      const formattedResponse = {\n        success: result.success,\n        data: result.data,\n        pagination: result.pagination || null,\n        message: result.message,\n        error: result.error\n      };\n      \n      console.log(`[listService.getListItems] Formatted response:`, formattedResponse);\n      \n      return formattedResponse;\n      \n    } catch (error) {\n      console.error(`[listService.getListItems] Error caught:`, error);\n      console.error(`[listService.getListItems] Error details:`, {\n        message: error.message,\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data\n      });\n      \n      // If it's an authentication error, try making the request without auth headers\n      if (error.response?.status === 401 || error.response?.status === 403) {\n        console.log(`[listService.getListItems] Auth error, trying without auth headers...`);\n        \n        try {\n          // Create a direct axios call without authentication\n          const fallbackResult = await fetch(`/api/lists/${safeId}/items`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          if (fallbackResult.ok) {\n            const data = await fallbackResult.json();\n            console.log(`[listService.getListItems] Fallback success:`, data);\n            \n            return {\n              success: true,\n              data: data.data || data,\n              pagination: data.pagination || null,\n              message: 'Retrieved via fallback method',\n              error: null\n            };\n          } else {\n            console.error(`[listService.getListItems] Fallback also failed:`, fallbackResult.status);\n          }\n        } catch (fallbackError) {\n          console.error(`[listService.getListItems] Fallback request failed:`, fallbackError);\n        }\n      }\n      \n      // Re-throw the original error\n      throw error;\n    }\n  }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.000Z] CONSOLE LOG: 📡 [ListDetail] Calling listService.getListItems(59)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.000Z] CONSOLE [LOG]: 📡 [ListDetail] Calling listService.getListItems(59)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.000Z] CONSOLE LOG: [listService.getListItems] Calling API for list 59 with params: {}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.000Z] CONSOLE LOG: [listService.getListItems] Auth debug: {hasToken: true, tokenLength: 276, tokenPreview: eyJhbGciOiJIUzI1NiIs...}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.000Z] 📤 REQUEST: GET http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.001Z] CONSOLE INFO: [INFO][2025-06-03T23:44:39.994Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.001Z] CONSOLE [INFO]: [INFO][2025-06-03T23:44:39.994Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.001Z] 📤 REQUEST: GET http://localhost:5001/api/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.001Z] 📤 REQUEST: GET http://localhost:5001/api/lists/59/items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] 📥 RESPONSE: 200 http://localhost:5001/api/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE LOG: ✅ [ListDetail] List details result: {success: true, message: List details retrieved successfully, data: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE [LOG]: ✅ [ListDetail] List details result: {success: true, message: List details retrieved successfully, data: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE LOG: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE [LOG]: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE LOG: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE [LOG]: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE LOG: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE [LOG]: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE LOG: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE [LOG]: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE LOG: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.007Z] CONSOLE [LOG]: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE LOG: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.008Z] CONSOLE [LOG]: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.009Z] CONSOLE LOG: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.009Z] CONSOLE [LOG]: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.009Z] CONSOLE LOG: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.009Z] CONSOLE [LOG]: 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.016Z] 📥 RESPONSE: 200 http://localhost:5001/api/lists/59/items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.017Z] CONSOLE DEBUG: [DEBUG][2025-06-03T23:44:40.013Z] [ListService.getListItems] Response received: {status: 200, statusText: OK, hasData: true, dataType: object, dataKeys: Array(4)}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.017Z] CONSOLE LOG: [listService.getListItems] Raw result from handleApiResponse: {success: true, message: List items retrieved successfully, data: Array(5)}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.018Z] CONSOLE LOG: [listService.getListItems] result.data type: object\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.018Z] CONSOLE LOG: [listService.getListItems] result.data is array: true\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.018Z] CONSOLE LOG: [listService.getListItems] Formatted response: {success: true, data: Array(5), pagination: null, message: List items retrieved successfully, error: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.020Z] CONSOLE LOG: ✅ [ListDetail] List items result: {success: true, data: Array(5), pagination: null, message: List items retrieved successfully, error: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.020Z] CONSOLE [LOG]: ✅ [ListDetail] List items result: {success: true, data: Array(5), pagination: null, message: List items retrieved successfully, error: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.020Z] CONSOLE LOG: 📝 [ListDetail] Items data: [Object, Object, Object, Object, Object]\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.020Z] CONSOLE [LOG]: 📝 [ListDetail] Items data: [Object, Object, Object, Object, Object]\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.021Z] CONSOLE LOG: 📊 [ListDetail] Items count: 5\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.021Z] CONSOLE [LOG]: 📊 [ListDetail] Items count: 5\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.021Z] CONSOLE LOG: 🔍 [ListDetail] Full result structure: {\n  \"success\": true,\n  \"data\": [\n    {\n      \"list_item_id\": 222,\n      \"id\": 222,\n      \"item_id\": 1,\n      \"item_type\": \"dish\",\n      \"added_at\": \"2025-06-03T23:21:29.758Z\",\n      \"notes\": null,\n      \"dish_id\": 1,\n      \"name\": \"Dish 1\",\n      \"dish_name\": null,\n      \"description\": null,\n      \"restaurant_id\": null,\n      \"restaurant_name\": null\n    },\n    {\n      \"list_item_id\": 226,\n      \"id\": 226,\n      \"item_id\": 304,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:58:58.932Z\",\n      \"notes\": null,\n      \"restaurant_id\": 304,\n      \"name\": \"Aquavit\",\n      \"restaurant_name\": \"Aquavit\",\n      \"cuisine\": null,\n      \"address\": \"65 E 55th St\",\n      \"city_name\": null,\n      \"location\": \"65 E 55th St\"\n    },\n    {\n      \"list_item_id\": 224,\n      \"id\": 224,\n      \"item_id\": 288,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.356Z\",\n      \"notes\": null,\n      \"restaurant_id\": 288,\n      \"name\": \"John's of Bleecker Street\",\n      \"restaurant_name\": \"John's of Bleecker Street\",\n      \"cuisine\": null,\n      \"address\": \"278 Bleecker St\",\n      \"city_name\": null,\n      \"location\": \"278 Bleecker St\"\n    },\n    {\n      \"list_item_id\": 223,\n      \"id\": 223,\n      \"item_id\": 287,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.337Z\",\n      \"notes\": null,\n      \"restaurant_id\": 287,\n      \"name\": \"Joe's Pizza\",\n      \"restaurant_name\": \"Joe's Pizza\",\n      \"cuisine\": null,\n      \"address\": \"7 Carmine St\",\n      \"city_name\": null,\n      \"location\": \"7 Carmine St\"\n    },\n    {\n      \"list_item_id\": 221,\n      \"id\": 221,\n      \"item_id\": 1,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:27:02.544Z\",\n      \"notes\": null,\n      \"restaurant_id\": 1,\n      \"name\": \"Restaurant 1\",\n      \"restaurant_name\": null,\n      \"cuisine\": null,\n      \"address\": null,\n      \"city_name\": null,\n      \"location\": null\n    }\n  ],\n  \"pagination\": null,\n  \"message\": \"List items retrieved successfully\"\n}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.021Z] CONSOLE [LOG]: 🔍 [ListDetail] Full result structure: {\n  \"success\": true,\n  \"data\": [\n    {\n      \"list_item_id\": 222,\n      \"id\": 222,\n      \"item_id\": 1,\n      \"item_type\": \"dish\",\n      \"added_at\": \"2025-06-03T23:21:29.758Z\",\n      \"notes\": null,\n      \"dish_id\": 1,\n      \"name\": \"Dish 1\",\n      \"dish_name\": null,\n      \"description\": null,\n      \"restaurant_id\": null,\n      \"restaurant_name\": null\n    },\n    {\n      \"list_item_id\": 226,\n      \"id\": 226,\n      \"item_id\": 304,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:58:58.932Z\",\n      \"notes\": null,\n      \"restaurant_id\": 304,\n      \"name\": \"Aquavit\",\n      \"restaurant_name\": \"Aquavit\",\n      \"cuisine\": null,\n      \"address\": \"65 E 55th St\",\n      \"city_name\": null,\n      \"location\": \"65 E 55th St\"\n    },\n    {\n      \"list_item_id\": 224,\n      \"id\": 224,\n      \"item_id\": 288,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.356Z\",\n      \"notes\": null,\n      \"restaurant_id\": 288,\n      \"name\": \"John's of Bleecker Street\",\n      \"restaurant_name\": \"John's of Bleecker Street\",\n      \"cuisine\": null,\n      \"address\": \"278 Bleecker St\",\n      \"city_name\": null,\n      \"location\": \"278 Bleecker St\"\n    },\n    {\n      \"list_item_id\": 223,\n      \"id\": 223,\n      \"item_id\": 287,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.337Z\",\n      \"notes\": null,\n      \"restaurant_id\": 287,\n      \"name\": \"Joe's Pizza\",\n      \"restaurant_name\": \"Joe's Pizza\",\n      \"cuisine\": null,\n      \"address\": \"7 Carmine St\",\n      \"city_name\": null,\n      \"location\": \"7 Carmine St\"\n    },\n    {\n      \"list_item_id\": 221,\n      \"id\": 221,\n      \"item_id\": 1,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:27:02.544Z\",\n      \"notes\": null,\n      \"restaurant_id\": 1,\n      \"name\": \"Restaurant 1\",\n      \"restaurant_name\": null,\n      \"cuisine\": null,\n      \"address\": null,\n      \"city_name\": null,\n      \"location\": null\n    }\n  ],\n  \"pagination\": null,\n  \"message\": \"List items retrieved successfully\"\n}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.021Z] CONSOLE LOG: 🌐 [ListDetail] ===== LIST ITEMS QUERY COMPLETED =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.021Z] CONSOLE [LOG]: 🌐 [ListDetail] ===== LIST ITEMS QUERY COMPLETED =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE LOG: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE [LOG]: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE LOG: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE [LOG]: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE LOG: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE [LOG]: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE LOG: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.022Z] CONSOLE [LOG]: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.023Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.024Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.024Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.024Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.024Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE LOG: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE [LOG]: 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE LOG: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE [LOG]: 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE LOG: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE [LOG]: 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE LOG: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.027Z] CONSOLE [LOG]: 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE LOG: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE [LOG]: 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE LOG: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE [LOG]: ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE LOG: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE [LOG]: 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE LOG: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE [LOG]: 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE LOG: ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE [LOG]: ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE LOG: 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.028Z] CONSOLE [LOG]: 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.029Z] CONSOLE LOG: 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.029Z] CONSOLE [LOG]: 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.029Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.029Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.030Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.030Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.030Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.030Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.030Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.030Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.031Z] CONSOLE LOG: 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.031Z] CONSOLE [LOG]: 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.031Z] 📥 RESPONSE: 200 http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:40.035Z] 📥 RESPONSE: 200 http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:44.925Z] 📤 REQUEST: GET https://maps.googleapis.com/maps-api-v3/api/js/61/2/common.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:44.926Z] 📤 REQUEST: GET https://maps.googleapis.com/maps-api-v3/api/js/61/2/util.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:44.967Z] 📥 RESPONSE: 200 https://maps.googleapis.com/maps-api-v3/api/js/61/2/common.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:44.976Z] 📥 RESPONSE: 200 https://maps.googleapis.com/maps-api-v3/api/js/61/2/util.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z] 🔍 Frontend Debug Info:\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z]    URL: http://localhost:5173/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z]    Auth: {\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6Ik...\",\"hasToken\":true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z]    React: null\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z]    Errors: []\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z]    Loading States: []\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:45.361Z]    DOM Items: {\".list-item\":{\"count\":0,\"texts\":[]},\".dish-item\":{\"count\":0,\"texts\":[]},\".restaurant-item\":{\"count\":0,\"texts\":[]},\"[data-testid*=\\\"item\\\"]\":{\"count\":0,\"texts\":[]},\".item-card\":{\"count\":0,\"texts\":[]},\".menu-item\":{\"count\":0,\"texts\":[]}}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z] 📝 CAPTURED 154 CONSOLE MESSAGES:\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z]    48. [log] 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z]    49. [log] 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z]    50. [log] 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z]    51. [log] 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z]    52. [log] 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.368Z]    53. [log] ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    54. [log] 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    55. [log] 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    56. [log] 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    57. [log] 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    58. [log] 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    59. [log] 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    60. [log] 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    61. [log] 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    62. [log] ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    63. [log] 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    64. [log] 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    65. [log] 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    66. [info] [INFO][2025-06-03T23:44:39.992Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    67. [log] 🌐 [ListDetail] Fetching list details for ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    68. [log] 🔑 [ListDetail] Auth check: {isAuthenticated: true, hasUser: true, userId: 104, userRole: superuser}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    71. [log] 🌐 [ListDetail] ===== LIST ITEMS QUERY STARTING =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    72. [log] 🌐 [ListDetail] Fetching items for list ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    73. [log] 🔍 [ListDetail] listService object: {getLists: , getList: , getListDetails: , createList: , updateList: }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    74. [log] 🔍 [ListDetail] getListItems function: async function(listId, params = {}) {\n    const safeId = validateId(listId, 'listId');\n    \n    console.log(`[listService.getListItems] Calling API for list ${safeId} with params:`, params);\n    \n    // DEBUG: Check authentication state\n    const token = localStorage.getItem('token') || localStorage.getItem('auth-token') || localStorage.getItem('authToken');\n    console.log(`[listService.getListItems] Auth debug:`, {\n      hasToken: !!token,\n      tokenLength: token?.length,\n      tokenPreview: token ? `${token.substring(0, 20)}...` : 'none'\n    });\n    \n    try {\n      const result = await handleApiResponse(\n        () => apiClient.get(`/lists/${safeId}/items`, { params }),\n        'ListService.getListItems'\n      );\n      \n      console.log(`[listService.getListItems] Raw result from handleApiResponse:`, result);\n      console.log(`[listService.getListItems] result.data type:`, typeof result.data);\n      console.log(`[listService.getListItems] result.data is array:`, Array.isArray(result.data));\n      \n      // Format the response to maintain backward compatibility\n      const formattedResponse = {\n        success: result.success,\n        data: result.data,\n        pagination: result.pagination || null,\n        message: result.message,\n        error: result.error\n      };\n      \n      console.log(`[listService.getListItems] Formatted response:`, formattedResponse);\n      \n      return formattedResponse;\n      \n    } catch (error) {\n      console.error(`[listService.getListItems] Error caught:`, error);\n      console.error(`[listService.getListItems] Error details:`, {\n        message: error.message,\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data\n      });\n      \n      // If it's an authentication error, try making the request without auth headers\n      if (error.response?.status === 401 || error.response?.status === 403) {\n        console.log(`[listService.getListItems] Auth error, trying without auth headers...`);\n        \n        try {\n          // Create a direct axios call without authentication\n          const fallbackResult = await fetch(`/api/lists/${safeId}/items`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          if (fallbackResult.ok) {\n            const data = await fallbackResult.json();\n            console.log(`[listService.getListItems] Fallback success:`, data);\n            \n            return {\n              success: true,\n              data: data.data || data,\n              pagination: data.pagination || null,\n              message: 'Retrieved via fallback method',\n              error: null\n            };\n          } else {\n            console.error(`[listService.getListItems] Fallback also failed:`, fallbackResult.status);\n          }\n        } catch (fallbackError) {\n          console.error(`[listService.getListItems] Fallback request failed:`, fallbackError);\n        }\n      }\n      \n      // Re-throw the original error\n      throw error;\n    }\n  }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    75. [log] 📡 [ListDetail] Calling listService.getListItems(59)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    78. [info] [INFO][2025-06-03T23:44:39.994Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    92. [log] ✅ [ListDetail] List details result: {success: true, message: List details retrieved successfully, data: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    93. [log] 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    94. [log] 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    95. [log] 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    96. [log] 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    97. [log] 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    98. [log] ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    99. [log] 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    100. [log] 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    101. [log] 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    102. [log] 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    103. [log] 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    104. [log] 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    105. [log] 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    106. [log] 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    107. [log] ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    108. [log] 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    109. [log] 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    110. [log] 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    118. [log] ✅ [ListDetail] List items result: {success: true, data: Array(5), pagination: null, message: List items retrieved successfully, error: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    119. [log] 📝 [ListDetail] Items data: [Object, Object, Object, Object, Object]\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    120. [log] 📊 [ListDetail] Items count: 5\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    121. [log] 🔍 [ListDetail] Full result structure: {\n  \"success\": true,\n  \"data\": [\n    {\n      \"list_item_id\": 222,\n      \"id\": 222,\n      \"item_id\": 1,\n      \"item_type\": \"dish\",\n      \"added_at\": \"2025-06-03T23:21:29.758Z\",\n      \"notes\": null,\n      \"dish_id\": 1,\n      \"name\": \"Dish 1\",\n      \"dish_name\": null,\n      \"description\": null,\n      \"restaurant_id\": null,\n      \"restaurant_name\": null\n    },\n    {\n      \"list_item_id\": 226,\n      \"id\": 226,\n      \"item_id\": 304,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:58:58.932Z\",\n      \"notes\": null,\n      \"restaurant_id\": 304,\n      \"name\": \"Aquavit\",\n      \"restaurant_name\": \"Aquavit\",\n      \"cuisine\": null,\n      \"address\": \"65 E 55th St\",\n      \"city_name\": null,\n      \"location\": \"65 E 55th St\"\n    },\n    {\n      \"list_item_id\": 224,\n      \"id\": 224,\n      \"item_id\": 288,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.356Z\",\n      \"notes\": null,\n      \"restaurant_id\": 288,\n      \"name\": \"John's of Bleecker Street\",\n      \"restaurant_name\": \"John's of Bleecker Street\",\n      \"cuisine\": null,\n      \"address\": \"278 Bleecker St\",\n      \"city_name\": null,\n      \"location\": \"278 Bleecker St\"\n    },\n    {\n      \"list_item_id\": 223,\n      \"id\": 223,\n      \"item_id\": 287,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.337Z\",\n      \"notes\": null,\n      \"restaurant_id\": 287,\n      \"name\": \"Joe's Pizza\",\n      \"restaurant_name\": \"Joe's Pizza\",\n      \"cuisine\": null,\n      \"address\": \"7 Carmine St\",\n      \"city_name\": null,\n      \"location\": \"7 Carmine St\"\n    },\n    {\n      \"list_item_id\": 221,\n      \"id\": 221,\n      \"item_id\": 1,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:27:02.544Z\",\n      \"notes\": null,\n      \"restaurant_id\": 1,\n      \"name\": \"Restaurant 1\",\n      \"restaurant_name\": null,\n      \"cuisine\": null,\n      \"address\": null,\n      \"city_name\": null,\n      \"location\": null\n    }\n  ],\n  \"pagination\": null,\n  \"message\": \"List items retrieved successfully\"\n}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    122. [log] 🌐 [ListDetail] ===== LIST ITEMS QUERY COMPLETED =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    123. [log] 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    124. [log] 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    125. [log] 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    126. [log] 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    127. [log] 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    128. [log] ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    129. [log] 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    130. [log] 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    131. [log] ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    132. [log] 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    133. [log] 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    134. [log] 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    135. [log] 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    136. [log] 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    137. [log] 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    138. [log] 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    139. [log] 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    140. [log] 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.369Z]    141. [log] 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    142. [log] 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    143. [log] 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    144. [log] ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    145. [log] 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    146. [log] 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    147. [log] ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    148. [log] 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    149. [log] 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    150. [log] 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    151. [log] 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    152. [log] 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    153. [log] 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    154. [log] 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:50.370Z] ✅ Found 83 ListDetail component messages\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Query states: {isLoadingList: true, isLoadingItems: true, isListError: false, isItemsError: false, listData: false}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Final data check: {listId: 59, hasListData: false, hasItemsData: false, listName: undefined, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: true, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - [INFO][2025-06-03T23:44:39.992Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🌐 [ListDetail] Fetching list details for ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔑 [ListDetail] Auth check: {isAuthenticated: true, hasUser: true, userId: 104, userRole: superuser}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🌐 [ListDetail] ===== LIST ITEMS QUERY STARTING =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🌐 [ListDetail] Fetching items for list ID: 59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] listService object: {getLists: , getList: , getListDetails: , createList: , updateList: }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] getListItems function: async function(listId, params = {}) {\n    const safeId = validateId(listId, 'listId');\n    \n    console.log(`[listService.getListItems] Calling API for list ${safeId} with params:`, params);\n    \n    // DEBUG: Check authentication state\n    const token = localStorage.getItem('token') || localStorage.getItem('auth-token') || localStorage.getItem('authToken');\n    console.log(`[listService.getListItems] Auth debug:`, {\n      hasToken: !!token,\n      tokenLength: token?.length,\n      tokenPreview: token ? `${token.substring(0, 20)}...` : 'none'\n    });\n    \n    try {\n      const result = await handleApiResponse(\n        () => apiClient.get(`/lists/${safeId}/items`, { params }),\n        'ListService.getListItems'\n      );\n      \n      console.log(`[listService.getListItems] Raw result from handleApiResponse:`, result);\n      console.log(`[listService.getListItems] result.data type:`, typeof result.data);\n      console.log(`[listService.getListItems] result.data is array:`, Array.isArray(result.data));\n      \n      // Format the response to maintain backward compatibility\n      const formattedResponse = {\n        success: result.success,\n        data: result.data,\n        pagination: result.pagination || null,\n        message: result.message,\n        error: result.error\n      };\n      \n      console.log(`[listService.getListItems] Formatted response:`, formattedResponse);\n      \n      return formattedResponse;\n      \n    } catch (error) {\n      console.error(`[listService.getListItems] Error caught:`, error);\n      console.error(`[listService.getListItems] Error details:`, {\n        message: error.message,\n        status: error.response?.status,\n        statusText: error.response?.statusText,\n        data: error.response?.data\n      });\n      \n      // If it's an authentication error, try making the request without auth headers\n      if (error.response?.status === 401 || error.response?.status === 403) {\n        console.log(`[listService.getListItems] Auth error, trying without auth headers...`);\n        \n        try {\n          // Create a direct axios call without authentication\n          const fallbackResult = await fetch(`/api/lists/${safeId}/items`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          if (fallbackResult.ok) {\n            const data = await fallbackResult.json();\n            console.log(`[listService.getListItems] Fallback success:`, data);\n            \n            return {\n              success: true,\n              data: data.data || data,\n              pagination: data.pagination || null,\n              message: 'Retrieved via fallback method',\n              error: null\n            };\n          } else {\n            console.error(`[listService.getListItems] Fallback also failed:`, fallbackResult.status);\n          }\n        } catch (fallbackError) {\n          console.error(`[listService.getListItems] Fallback request failed:`, fallbackError);\n        }\n      }\n      \n      // Re-throw the original error\n      throw error;\n    }\n  }\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 📡 [ListDetail] Calling listService.getListItems(59)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - [INFO][2025-06-03T23:44:39.994Z] [ListDetail] Forcing database data\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - ✅ [ListDetail] List details result: {success: true, message: List details retrieved successfully, data: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: true, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: false, listName: Test QuickAdd List, itemsCount: 0}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(0), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 0, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🔄 [ListDetail] Returning default sorted items: {itemsLength: 0, firstItem: undefined, lastItem: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.370Z]    - 🎯 [ListDetail] Final items after useMemo: {itemsLength: 0, items: Array(0), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔄 [ListDetail] Rendering loading state: {isLoading: true, isLoadingList: false, isLoadingItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - ✅ [ListDetail] List items result: {success: true, data: Array(5), pagination: null, message: List items retrieved successfully, error: undefined}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 📝 [ListDetail] Items data: [Object, Object, Object, Object, Object]\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 📊 [ListDetail] Items count: 5\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] Full result structure: {\n  \"success\": true,\n  \"data\": [\n    {\n      \"list_item_id\": 222,\n      \"id\": 222,\n      \"item_id\": 1,\n      \"item_type\": \"dish\",\n      \"added_at\": \"2025-06-03T23:21:29.758Z\",\n      \"notes\": null,\n      \"dish_id\": 1,\n      \"name\": \"Dish 1\",\n      \"dish_name\": null,\n      \"description\": null,\n      \"restaurant_id\": null,\n      \"restaurant_name\": null\n    },\n    {\n      \"list_item_id\": 226,\n      \"id\": 226,\n      \"item_id\": 304,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:58:58.932Z\",\n      \"notes\": null,\n      \"restaurant_id\": 304,\n      \"name\": \"Aquavit\",\n      \"restaurant_name\": \"Aquavit\",\n      \"cuisine\": null,\n      \"address\": \"65 E 55th St\",\n      \"city_name\": null,\n      \"location\": \"65 E 55th St\"\n    },\n    {\n      \"list_item_id\": 224,\n      \"id\": 224,\n      \"item_id\": 288,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.356Z\",\n      \"notes\": null,\n      \"restaurant_id\": 288,\n      \"name\": \"John's of Bleecker Street\",\n      \"restaurant_name\": \"John's of Bleecker Street\",\n      \"cuisine\": null,\n      \"address\": \"278 Bleecker St\",\n      \"city_name\": null,\n      \"location\": \"278 Bleecker St\"\n    },\n    {\n      \"list_item_id\": 223,\n      \"id\": 223,\n      \"item_id\": 287,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:45:41.337Z\",\n      \"notes\": null,\n      \"restaurant_id\": 287,\n      \"name\": \"Joe's Pizza\",\n      \"restaurant_name\": \"Joe's Pizza\",\n      \"cuisine\": null,\n      \"address\": \"7 Carmine St\",\n      \"city_name\": null,\n      \"location\": \"7 Carmine St\"\n    },\n    {\n      \"list_item_id\": 221,\n      \"id\": 221,\n      \"item_id\": 1,\n      \"item_type\": \"restaurant\",\n      \"added_at\": \"2025-06-02T00:27:02.544Z\",\n      \"notes\": null,\n      \"restaurant_id\": 1,\n      \"name\": \"Restaurant 1\",\n      \"restaurant_name\": null,\n      \"cuisine\": null,\n      \"address\": null,\n      \"city_name\": null,\n      \"location\": null\n    }\n  ],\n  \"pagination\": null,\n  \"message\": \"List items retrieved successfully\"\n}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🌐 [ListDetail] ===== LIST ITEMS QUERY COMPLETED =====\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🚀 [ListDetail] Component initialized with: {listId: 59, propListId: undefined, urlListId: 59, isAuthenticated: true, userId: 104}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] List items query enabled condition: {listId: 59, listIdType: string, listIdTruthy: true, enabled: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] Query states: {isLoadingList: false, isLoadingItems: false, isListError: false, isItemsError: false, listData: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔍 [ListDetail] Final data check: {listId: 59, hasListData: true, hasItemsData: true, listName: Test QuickAdd List, itemsCount: 5}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔄 [ListDetail] useMemo items recalculating: {rawItems: Array(5), rawItemsType: object, rawItemsIsArray: true, rawItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - ✅ [ListDetail] Creating sorted items array: {sortedItemsLength: 5, sortOrder: default}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🔄 [ListDetail] Returning default sorted items: {itemsLength: 5, firstItem: Object, lastItem: Object}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎯 [ListDetail] Final items after useMemo: {itemsLength: 5, items: Array(5), itemsIsArray: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - ✅ [ListDetail] Rendering main content: {isLoading: false, isError: false, listName: Test QuickAdd List, itemsLength: 5, hasItems: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] About to render items section: {items: Array(5), itemsLength: 5, itemsIsArray: true, hasItemsAndLength: true, itemsCondition: true}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎭 [ListDetail] Rendering 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 0: {list_item_id: 222, id: 222, item_id: 1, item_type: dish, added_at: 2025-06-03T23:21:29.758Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 1: {list_item_id: 226, id: 226, item_id: 304, item_type: restaurant, added_at: 2025-06-02T00:58:58.932Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 2: {list_item_id: 224, id: 224, item_id: 288, item_type: restaurant, added_at: 2025-06-02T00:45:41.356Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 3: {list_item_id: 223, id: 223, item_id: 287, item_type: restaurant, added_at: 2025-06-02T00:45:41.337Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z]    - 🎬 [ListDetail] Rendering item 4: {list_item_id: 221, id: 221, item_id: 1, item_type: restaurant, added_at: 2025-06-02T00:27:02.544Z}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:50.371Z] 🔍 Inspecting React Query states...\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.389Z] 🔍 React Query Debug: {\"reactQueryDevtools\":null,\"windowReactQuery\":null,\"consoleErrors\":[\"Console memory access available\"],\"networkRequests\":[]}\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.390Z] 🔍 Comparing API data vs UI display...\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z] 📊 API returned 5 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z] 📊 UI shows 0 items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z] 📝 API Items:\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z]    1. Dish 1 (dish)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z]    2. Aquavit (restaurant)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z]    3. John's of Bleecker Street (restaurant)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z]    4. Joe's Pizza (restaurant)\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.398Z]    5. Restaurant 1 (restaurant)\n"
                        },
                        {
                          "text": "\n❌ [2025-06-03T23:44:53.399Z] 🚨 NO ITEMS VISIBLE IN UI despite API returning 5 items!\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z] 📊 NETWORK ACTIVITY SUMMARY:\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Total Requests: 9\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Total Responses: 9\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 1: GET http://localhost:5173/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 2: GET https://maps.googleapis.com/maps/api/js?key=AIzaSyD_xhCWUXjhSXD4xpL-BxM5t7HfzJDf-dI&libraries=places\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 3: GET https://maps.googleapis.com/maps/api/mapsjs/gen_204?csp_test=true\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 4: GET http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 5: GET http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 6: GET http://localhost:5001/api/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 7: GET http://localhost:5001/api/lists/59/items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 8: GET https://maps.googleapis.com/maps-api-v3/api/js/61/2/common.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Request 9: GET https://maps.googleapis.com/maps-api-v3/api/js/61/2/util.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 1: 200 http://localhost:5173/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 2: 200 https://maps.googleapis.com/maps/api/js?key=AIzaSyD_xhCWUXjhSXD4xpL-BxM5t7HfzJDf-dI&libraries=places\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 3: 200 https://maps.googleapis.com/maps/api/mapsjs/gen_204?csp_test=true\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 4: 200 http://localhost:5001/api/lists/59\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 5: 200 http://localhost:5001/api/lists/59/items\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 6: 200 http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 7: 200 http://localhost:5173/api/notifications/unread-count\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 8: 200 https://maps.googleapis.com/maps-api-v3/api/js/61/2/common.js\n"
                        },
                        {
                          "text": "\n🔵 [2025-06-03T23:44:53.399Z]    Response 9: 200 https://maps.googleapis.com/maps-api-v3/api/js/61/2/util.js\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] 🎯 DEBUGGING COMPLETE\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] API Items: 5\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] UI Items: 0\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] Network Requests: 9\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] Debug Errors: 0\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] Console Messages: 154\n"
                        },
                        {
                          "text": "\n✅ [2025-06-03T23:44:53.399Z] ListDetail Messages: 83\n"
                        },
                        {
                          "text": "\n❌ [2025-06-03T23:44:53.399Z] 🚨 CONFIRMED: Frontend bug - API returns data but UI shows nothing\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-06-03T23:44:32.571Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/naf/Downloads/doof/e2e-results/test-artifacts/debug-list-items-frontend--b47e5-nd-List-Items-Display-Issue-desktop-chrome-comprehensive/test-finished-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/naf/Downloads/doof/e2e-results/test-artifacts/debug-list-items-frontend--b47e5-nd-List-Items-Display-Issue-desktop-chrome-comprehensive/trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "0cd33c4d5efc5cd2cf39-695d652e0302221bf0fe",
              "file": "debug-list-items-frontend.spec.js",
              "line": 331,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-06-03T23:44:32.151Z",
    "duration": 21704.89,
    "expected": 1,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 0
  }
}